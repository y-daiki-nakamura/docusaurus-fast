name: Update Environment Field in Project

on:
  issues:
    types:
      - opened

jobs:
  update-environment:
    runs-on: ubuntu-latest
    steps:
      # 環境情報をIssue Bodyから抽出
      - name: Extract Environment from Issue Body
        id: extract_env
        run: |
          echo "Extracting environment info..."
          ENVIRONMENT=$(echo "${{ github.event.issue.body }}" | grep "Environment | 環境情報:" | sed 's/Environment | 環境情報: //')
          echo "environment=${ENVIRONMENT}" >> $GITHUB_ENV
        shell: bash

      # 環境情報を確認
      - name: Log Extracted Environment
        run: echo "Extracted environment: ${{ env.environment }}"

      # ProjectのItem IDと関連情報を取得
      - name: Get Project and Item ID
        id: get_project_info
        uses: actions/github-script@v6.4.1
        with:
          script: |
            const issueId = context.payload.issue.node_id;
            const projectItems = await github.graphql(`
              query($issueId: ID!) {
                node(id: $issueId) {
                  ... on Issue {
                    projectItems(first: 1) {
                      nodes {
                        id
                        project {
                          id
                        }
                      }
                    }
                  }
                }
              }
            `, { issueId });

            if (!projectItems.node.projectItems.nodes.length) {
              throw new Error("No linked project found for this issue.");
            }

            const item = projectItems.node.projectItems.nodes[0];
            return {
              projectId: item.project.id,
              itemId: item.id
            };
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 環境情報をProject V2に設定
      - name: Update Environment Field in Project
        uses: actions/github-script@v6.4.1
        with:
          script: |
            const environment = process.env.environment;
            if (!environment) {
              console.log("No environment value provided. Skipping update.");
              return;
            }

            // 環境オプションをマッピング
            const environmentOptions = {
              "Development": "4fa26edc",
              "UAT": "329a3eec",
              "Valid": "60906637"
            };

            const optionId = environmentOptions[environment];
            if (!optionId) {
              throw new Error(`Environment value '${environment}' does not match any known options.`);
            }

            const projectId = "${{ steps.get_project_info.outputs.projectId }}";
            const itemId = "${{ steps.get_project_info.outputs.itemId }}";
            const fieldId = "PVTSSF_lAHOA1KAF84At_OYzgkqJe8"; // EnvironmentフィールドID

            await github.graphql(`
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $optionId: String!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: { singleSelectOptionId: $optionId }
                }) {
                  clientMutationId
                }
              }
            `, {
              projectId,
              itemId,
              fieldId,
              optionId
            });

            console.log(`Environment field updated to: ${environment}`);
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
