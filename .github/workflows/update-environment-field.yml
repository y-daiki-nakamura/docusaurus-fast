name: Update Project Version Field (Fixed IDs)
on:
  issues:
    types: [opened, re-open]

permissions:
  contents: read
  issues: read

jobs:
  update-project-version:
    runs-on: ubuntu-latest
    steps:
      - name: Debug info
        run: |
          echo "OWNER=${{ github.repository_owner }}"
          echo "REPO=${{ github.event.repository.name }}"
          echo "NUMBER=${{ github.event.issue.number }}"

      - name: Extract "Version" from issue body
        id: extract_version
        run: |
          BODY="${{ github.event.issue.body }}"
          # "### Version" の次の行を取得
          VERSION=$(echo "$BODY" | awk '/^### Version/{getline;print}')
          echo "Extracted Version=$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set Fixed Project/Field IDs
        id: set_fixed_ids
        run: |
          echo "project_id=PVT_kwHOA1KAF84At_OYPVT_kwHOA1KAF84At_OY" >> $GITHUB_OUTPUT
          echo "version_field_id=PVTF_lAHOA1KAF84At_OYzgkqVgI" >> $GITHUB_OUTPUT

      - name: Get Project Item ID from Issue (Fixed Project ID)
        id: get_item_id
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          OWNER="${{ github.repository_owner }}"
          REPO="${{ github.event.repository.name }}"
          NUMBER=${{ github.event.issue.number }}
          PROJECT_ID=${{ steps.set_fixed_ids.outputs.project_id }}

          QUERY='
          query($owner:String!,$repo:String!,$number:Int!) {
            repository(owner:$owner,name:$repo) {
              issue(number:$number) {
                projectItems(first: 50) {
                  nodes {
                    id
                    project {
                      id
                    }
                  }
                }
              }
            }
          }'

          RESULT=$(gh api graphql -f query="$QUERY" -f owner="$OWNER" -f repo="$REPO" -f number="$NUMBER")

          echo "ProjectItems query result:"
          echo "$RESULT"

          ITEM_ID=$(echo "$RESULT" | jq -r --arg PID "$PROJECT_ID" '.data.repository.issue.projectItems.nodes[] | select(.project.id==$PID) | .id')

          echo "ITEM_ID=$ITEM_ID"
          if [ -z "$ITEM_ID" ]; then
            echo "Item not found for this project. Make sure the issue is linked to the project."
            exit 1
          fi

          echo "item_id=$ITEM_ID" >> $GITHUB_OUTPUT

      - name: Update Field via github-script (text)
        # ここでは Version フィールドがテキストフィールドであると仮定
        # シングルセレクトの場合は value:{singleSelectOptionId:"..."} に変更が必要
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          projectId: ${{ steps.set_fixed_ids.outputs.project_id }}
          itemId: ${{ steps.get_item_id.outputs.item_id }}
          fieldId: ${{ steps.set_fixed_ids.outputs.version_field_id }}
          version: ${{ steps.extract_version.outputs.version }}
        with:
          script: |
            const { projectId, itemId, fieldId, version } = process.env;
            const mutation = `mutation($projectId:ID!,$itemId:ID!,$fieldId:ID!,$value:ProjectV2FieldValue!) {
              updateProjectV2ItemFieldValue(
                input: { projectId:$projectId, itemId:$itemId, fieldId:$fieldId, value:{text:$value}}
              ) {
                projectV2Item {
                  id
                }
              }
            }`;

            const result = await github.graphql(mutation, {
              projectId,
              itemId,
              fieldId,
              value: version
            });

            console.log("Update result:", result);
